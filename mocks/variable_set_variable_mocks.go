// Code generated by MockGen. DO NOT EDIT.
// Source: variable_set_variable.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	tfe "github.com/hashicorp/go-tfe"
)

// MockVariableSetVariables is a mock of VariableSetVariables interface.
type MockVariableSetVariables struct {
	ctrl     *gomock.Controller
	recorder *MockVariableSetVariablesMockRecorder
}

// MockVariableSetVariablesMockRecorder is the mock recorder for MockVariableSetVariables.
type MockVariableSetVariablesMockRecorder struct {
	mock *MockVariableSetVariables
}

// NewMockVariableSetVariables creates a new mock instance.
func NewMockVariableSetVariables(ctrl *gomock.Controller) *MockVariableSetVariables {
	mock := &MockVariableSetVariables{ctrl: ctrl}
	mock.recorder = &MockVariableSetVariablesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVariableSetVariables) EXPECT() *MockVariableSetVariablesMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockVariableSetVariables) Create(ctx context.Context, variableSetID string, options *tfe.VariableSetVariableCreateOptions) (*tfe.VariableSetVariable, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, variableSetID, options)
	ret0, _ := ret[0].(*tfe.VariableSetVariable)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockVariableSetVariablesMockRecorder) Create(ctx, variableSetID, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockVariableSetVariables)(nil).Create), ctx, variableSetID, options)
}

// Delete mocks base method.
func (m *MockVariableSetVariables) Delete(ctx context.Context, variableSetID, variableID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, variableSetID, variableID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockVariableSetVariablesMockRecorder) Delete(ctx, variableSetID, variableID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockVariableSetVariables)(nil).Delete), ctx, variableSetID, variableID)
}

// List mocks base method.
func (m *MockVariableSetVariables) List(ctx context.Context, variableSetID string, options *tfe.VariableSetVariableListOptions) (*tfe.VariableSetVariableList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx, variableSetID, options)
	ret0, _ := ret[0].(*tfe.VariableSetVariableList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockVariableSetVariablesMockRecorder) List(ctx, variableSetID, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockVariableSetVariables)(nil).List), ctx, variableSetID, options)
}

// Read mocks base method.
func (m *MockVariableSetVariables) Read(ctx context.Context, variableSetID, variableID string) (*tfe.VariableSetVariable, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", ctx, variableSetID, variableID)
	ret0, _ := ret[0].(*tfe.VariableSetVariable)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockVariableSetVariablesMockRecorder) Read(ctx, variableSetID, variableID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockVariableSetVariables)(nil).Read), ctx, variableSetID, variableID)
}

// Update mocks base method.
func (m *MockVariableSetVariables) Update(ctx context.Context, variableSetID, variableID string, options *tfe.VariableSetVariableUpdateOptions) (*tfe.VariableSetVariable, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update", ctx, variableSetID, variableID, options)
	ret0, _ := ret[0].(*tfe.VariableSetVariable)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update.
func (mr *MockVariableSetVariablesMockRecorder) Update(ctx, variableSetID, variableID, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockVariableSetVariables)(nil).Update), ctx, variableSetID, variableID, options)
}
