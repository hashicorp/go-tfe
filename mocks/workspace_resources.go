// Code generated by MockGen. DO NOT EDIT.
// Source: workspace_resources.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	tfe "github.com/hashicorp/go-tfe"
)

// MockWorkspaceResources is a mock of WorkspaceResources interface.
type MockWorkspaceResources struct {
	ctrl     *gomock.Controller
	recorder *MockWorkspaceResourcesMockRecorder
}

// MockWorkspaceResourcesMockRecorder is the mock recorder for MockWorkspaceResources.
type MockWorkspaceResourcesMockRecorder struct {
	mock *MockWorkspaceResources
}

// NewMockWorkspaceResources creates a new mock instance.
func NewMockWorkspaceResources(ctrl *gomock.Controller) *MockWorkspaceResources {
	mock := &MockWorkspaceResources{ctrl: ctrl}
	mock.recorder = &MockWorkspaceResourcesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWorkspaceResources) EXPECT() *MockWorkspaceResourcesMockRecorder {
	return m.recorder
}

// List mocks base method.
func (m *MockWorkspaceResources) List(ctx context.Context, workspaceID string, options *tfe.WorkspaceResourceListOptions) (*tfe.WorkspaceResourcesList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", ctx, workspaceID, options)
	ret0, _ := ret[0].(*tfe.WorkspaceResourcesList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockWorkspaceResourcesMockRecorder) List(ctx, workspaceID, options interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockWorkspaceResources)(nil).List), ctx, workspaceID, options)
}
