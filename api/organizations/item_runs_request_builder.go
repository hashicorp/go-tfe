// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package organizations

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
    ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f "github.com/hashicorp/go-tfe/api/models"
)

// ItemRunsRequestBuilder builds and executes requests for operations under \organizations\{organization_-id}\runs
type ItemRunsRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// ItemRunsRequestBuilderGetQueryParameters list all runs in an organization.
type ItemRunsRequestBuilderGetQueryParameters struct {
    // Filter by run operation.
    Filteroperation *string `uriparametername:"filter%5Boperation%5D"`
    // Filter by run status.
    Filterstatus *string `uriparametername:"filter%5Bstatus%5D"`
    // Filter by timeframe. Must be a numeric year or "year" for the last 12 months (the default).
    Filtertimeframe *string `uriparametername:"filter%5Btimeframe%5D"`
    // Page number.
    Pagenumber *int32 `uriparametername:"page%5Bnumber%5D"`
    // Page size.
    Pagesize *int32 `uriparametername:"page%5Bsize%5D"`
}
// ItemRunsRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ItemRunsRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
    // Request query parameters
    QueryParameters *ItemRunsRequestBuilderGetQueryParameters
}
// NewItemRunsRequestBuilderInternal instantiates a new ItemRunsRequestBuilder and sets the default values.
func NewItemRunsRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ItemRunsRequestBuilder) {
    m := &ItemRunsRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/organizations/{organization_%2Did}/runs{?filter%5Boperation%5D*,filter%5Bstatus%5D*,filter%5Btimeframe%5D*,page%5Bnumber%5D*,page%5Bsize%5D*}", pathParameters),
    }
    return m
}
// NewItemRunsRequestBuilder instantiates a new ItemRunsRequestBuilder and sets the default values.
func NewItemRunsRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ItemRunsRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewItemRunsRequestBuilderInternal(urlParams, requestAdapter)
}
// Get list all runs in an organization.
// Deprecated: This method is obsolete. Use GetAsRunsGetResponse instead.
// returns a ItemRunsResponseable when successful
// returns a Errors error when the service returns a 4XX or 5XX status code
func (m *ItemRunsRequestBuilder) Get(ctx context.Context, requestConfiguration *ItemRunsRequestBuilderGetRequestConfiguration)(ItemRunsResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f.CreateErrorsFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemRunsResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemRunsResponseable), nil
}
// GetAsRunsGetResponse list all runs in an organization.
// returns a ItemRunsGetResponseable when successful
// returns a Errors error when the service returns a 4XX or 5XX status code
func (m *ItemRunsRequestBuilder) GetAsRunsGetResponse(ctx context.Context, requestConfiguration *ItemRunsRequestBuilderGetRequestConfiguration)(ItemRunsGetResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f.CreateErrorsFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemRunsGetResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemRunsGetResponseable), nil
}
// ToGetRequestInformation list all runs in an organization.
// returns a *RequestInformation when successful
func (m *ItemRunsRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *ItemRunsRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        if requestConfiguration.QueryParameters != nil {
            requestInfo.AddQueryParameters(*(requestConfiguration.QueryParameters))
        }
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/vnd.api+json")
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *ItemRunsRequestBuilder when successful
func (m *ItemRunsRequestBuilder) WithUrl(rawUrl string)(*ItemRunsRequestBuilder) {
    return NewItemRunsRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
