// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package workspaces

import (
    "context"
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f "github.com/microsoft/kiota-abstractions-go"
    ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f "github.com/hashicorp/go-tfe/api/models"
)

// ItemConfigurationVersionsRequestBuilder builds and executes requests for operations under \workspaces\{workspace_id}\configuration-versions
type ItemConfigurationVersionsRequestBuilder struct {
    i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.BaseRequestBuilder
}
// ItemConfigurationVersionsRequestBuilderGetQueryParameters list configuration versions for a workspace.
type ItemConfigurationVersionsRequestBuilderGetQueryParameters struct {
    // Defaults to the first page if omitted.
    Pagenumber *int32 `uriparametername:"page%5Bnumber%5D"`
    // Defaults to 20 configuration versions per page if omitted.
    Pagesize *int32 `uriparametername:"page%5Bsize%5D"`
}
// ItemConfigurationVersionsRequestBuilderGetRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ItemConfigurationVersionsRequestBuilderGetRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
    // Request query parameters
    QueryParameters *ItemConfigurationVersionsRequestBuilderGetQueryParameters
}
// ItemConfigurationVersionsRequestBuilderPostRequestConfiguration configuration for the request such as headers, query parameters, and middleware options.
type ItemConfigurationVersionsRequestBuilderPostRequestConfiguration struct {
    // Request headers
    Headers *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestHeaders
    // Request options
    Options []i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestOption
}
// NewItemConfigurationVersionsRequestBuilderInternal instantiates a new ItemConfigurationVersionsRequestBuilder and sets the default values.
func NewItemConfigurationVersionsRequestBuilderInternal(pathParameters map[string]string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ItemConfigurationVersionsRequestBuilder) {
    m := &ItemConfigurationVersionsRequestBuilder{
        BaseRequestBuilder: *i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewBaseRequestBuilder(requestAdapter, "{+baseurl}/workspaces/{workspace_id}/configuration-versions{?page%5Bnumber%5D*,page%5Bsize%5D*}", pathParameters),
    }
    return m
}
// NewItemConfigurationVersionsRequestBuilder instantiates a new ItemConfigurationVersionsRequestBuilder and sets the default values.
func NewItemConfigurationVersionsRequestBuilder(rawUrl string, requestAdapter i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestAdapter)(*ItemConfigurationVersionsRequestBuilder) {
    urlParams := make(map[string]string)
    urlParams["request-raw-url"] = rawUrl
    return NewItemConfigurationVersionsRequestBuilderInternal(urlParams, requestAdapter)
}
// Get list configuration versions for a workspace.
// Deprecated: This method is obsolete. Use GetAsConfigurationVersionsGetResponse instead.
// returns a ItemConfigurationVersionsResponseable when successful
// returns a Errors error when the service returns a 4XX or 5XX status code
func (m *ItemConfigurationVersionsRequestBuilder) Get(ctx context.Context, requestConfiguration *ItemConfigurationVersionsRequestBuilderGetRequestConfiguration)(ItemConfigurationVersionsResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f.CreateErrorsFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemConfigurationVersionsResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemConfigurationVersionsResponseable), nil
}
// GetAsConfigurationVersionsGetResponse list configuration versions for a workspace.
// returns a ItemConfigurationVersionsGetResponseable when successful
// returns a Errors error when the service returns a 4XX or 5XX status code
func (m *ItemConfigurationVersionsRequestBuilder) GetAsConfigurationVersionsGetResponse(ctx context.Context, requestConfiguration *ItemConfigurationVersionsRequestBuilderGetRequestConfiguration)(ItemConfigurationVersionsGetResponseable, error) {
    requestInfo, err := m.ToGetRequestInformation(ctx, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f.CreateErrorsFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemConfigurationVersionsGetResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemConfigurationVersionsGetResponseable), nil
}
// Post create a new configuration version in a workspace.
// Deprecated: This method is obsolete. Use PostAsConfigurationVersionsPostResponse instead.
// returns a ItemConfigurationVersionsResponseable when successful
// returns a Errors error when the service returns a 4XX or 5XX status code
func (m *ItemConfigurationVersionsRequestBuilder) Post(ctx context.Context, body ItemConfigurationVersionsPostRequestBodyable, requestConfiguration *ItemConfigurationVersionsRequestBuilderPostRequestConfiguration)(ItemConfigurationVersionsResponseable, error) {
    requestInfo, err := m.ToPostRequestInformation(ctx, body, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f.CreateErrorsFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemConfigurationVersionsResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemConfigurationVersionsResponseable), nil
}
// PostAsConfigurationVersionsPostResponse create a new configuration version in a workspace.
// returns a ItemConfigurationVersionsPostResponseable when successful
// returns a Errors error when the service returns a 4XX or 5XX status code
func (m *ItemConfigurationVersionsRequestBuilder) PostAsConfigurationVersionsPostResponse(ctx context.Context, body ItemConfigurationVersionsPostRequestBodyable, requestConfiguration *ItemConfigurationVersionsRequestBuilderPostRequestConfiguration)(ItemConfigurationVersionsPostResponseable, error) {
    requestInfo, err := m.ToPostRequestInformation(ctx, body, requestConfiguration);
    if err != nil {
        return nil, err
    }
    errorMapping := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.ErrorMappings {
        "XXX": ie0c034c41cc7c7bacea8ad562c1d20027757bf421f1a5ace132a302c2bb1878f.CreateErrorsFromDiscriminatorValue,
    }
    res, err := m.BaseRequestBuilder.RequestAdapter.Send(ctx, requestInfo, CreateItemConfigurationVersionsPostResponseFromDiscriminatorValue, errorMapping)
    if err != nil {
        return nil, err
    }
    if res == nil {
        return nil, nil
    }
    return res.(ItemConfigurationVersionsPostResponseable), nil
}
// ToGetRequestInformation list configuration versions for a workspace.
// returns a *RequestInformation when successful
func (m *ItemConfigurationVersionsRequestBuilder) ToGetRequestInformation(ctx context.Context, requestConfiguration *ItemConfigurationVersionsRequestBuilderGetRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.GET, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        if requestConfiguration.QueryParameters != nil {
            requestInfo.AddQueryParameters(*(requestConfiguration.QueryParameters))
        }
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/vnd.api+json")
    return requestInfo, nil
}
// ToPostRequestInformation create a new configuration version in a workspace.
// returns a *RequestInformation when successful
func (m *ItemConfigurationVersionsRequestBuilder) ToPostRequestInformation(ctx context.Context, body ItemConfigurationVersionsPostRequestBodyable, requestConfiguration *ItemConfigurationVersionsRequestBuilderPostRequestConfiguration)(*i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.RequestInformation, error) {
    requestInfo := i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.NewRequestInformationWithMethodAndUrlTemplateAndPathParameters(i2ae4187f7daee263371cb1c977df639813ab50ffa529013b7437480d1ec0158f.POST, m.BaseRequestBuilder.UrlTemplate, m.BaseRequestBuilder.PathParameters)
    if requestConfiguration != nil {
        requestInfo.Headers.AddAll(requestConfiguration.Headers)
        requestInfo.AddRequestOptions(requestConfiguration.Options)
    }
    requestInfo.Headers.TryAdd("Accept", "application/vnd.api+json")
    err := requestInfo.SetContentFromParsable(ctx, m.BaseRequestBuilder.RequestAdapter, "application/vnd.api+json", body)
    if err != nil {
        return nil, err
    }
    return requestInfo, nil
}
// WithUrl returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
// returns a *ItemConfigurationVersionsRequestBuilder when successful
func (m *ItemConfigurationVersionsRequestBuilder) WithUrl(rawUrl string)(*ItemConfigurationVersionsRequestBuilder) {
    return NewItemConfigurationVersionsRequestBuilder(rawUrl, m.BaseRequestBuilder.RequestAdapter);
}
