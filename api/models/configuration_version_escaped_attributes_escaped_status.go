// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models
type ConfigurationVersion_attributes_status int

const (
    PENDING_CONFIGURATIONVERSION_ATTRIBUTES_STATUS ConfigurationVersion_attributes_status = iota
    FETCHING_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
    UPLOADED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
    ARCHIVED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
    ERRORED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
    BACKING_DATA_SOFT_DELETED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
    BACKING_DATA_PERMANENTLY_DELETED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
)

func (i ConfigurationVersion_attributes_status) String() string {
    return []string{"pending", "fetching", "uploaded", "archived", "errored", "backing_data_soft_deleted", "backing_data_permanently_deleted"}[i]
}
func ParseConfigurationVersion_attributes_status(v string) (any, error) {
    result := PENDING_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
    switch v {
        case "pending":
            result = PENDING_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        case "fetching":
            result = FETCHING_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        case "uploaded":
            result = UPLOADED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        case "archived":
            result = ARCHIVED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        case "errored":
            result = ERRORED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        case "backing_data_soft_deleted":
            result = BACKING_DATA_SOFT_DELETED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        case "backing_data_permanently_deleted":
            result = BACKING_DATA_PERMANENTLY_DELETED_CONFIGURATIONVERSION_ATTRIBUTES_STATUS
        default:
            return nil, nil
    }
    return &result, nil
}
func SerializeConfigurationVersion_attributes_status(values []ConfigurationVersion_attributes_status) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
func (i ConfigurationVersion_attributes_status) isMultiValue() bool {
    return false
}
