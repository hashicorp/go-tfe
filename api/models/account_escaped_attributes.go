// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type Account_attributes struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The authMethod property
    authMethod *string
    // The avatarUrl property
    avatarUrl *string
    // The email property
    email *string
    // The enterpriseSupport property
    enterpriseSupport *bool
    // The hasGitHubAppToken property
    hasGitHubAppToken *bool
    // The hasLinkedHcp property
    hasLinkedHcp *bool
    // The isAdmin property
    isAdmin *bool
    // The isConfirmed property
    isConfirmed *bool
    // The isServiceAccount property
    isServiceAccount *bool
    // Deprecated. Use is-admin.
    isSiteAdmin *bool
    // The isSsoLogin property
    isSsoLogin *bool
    // The isSudo property
    isSudo *bool
    // The isUnified property
    isUnified *bool
    // The password property
    password *string
    // The permissions property
    permissions Account_attributes_permissionsable
    // The twoFactor property
    twoFactor Account_attributes_twoFactorable
    // The unconfirmedEmail property
    unconfirmedEmail *string
    // The username property
    username *string
    // The v2Only property
    v2Only *bool
}
// NewAccount_attributes instantiates a new Account_attributes and sets the default values.
func NewAccount_attributes()(*Account_attributes) {
    m := &Account_attributes{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateAccount_attributesFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateAccount_attributesFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewAccount_attributes(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *Account_attributes) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetAuthMethod gets the auth-method property value. The authMethod property
// returns a *string when successful
func (m *Account_attributes) GetAuthMethod()(*string) {
    return m.authMethod
}
// GetAvatarUrl gets the avatar-url property value. The avatarUrl property
// returns a *string when successful
func (m *Account_attributes) GetAvatarUrl()(*string) {
    return m.avatarUrl
}
// GetEmail gets the email property value. The email property
// returns a *string when successful
func (m *Account_attributes) GetEmail()(*string) {
    return m.email
}
// GetEnterpriseSupport gets the enterprise-support property value. The enterpriseSupport property
// returns a *bool when successful
func (m *Account_attributes) GetEnterpriseSupport()(*bool) {
    return m.enterpriseSupport
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *Account_attributes) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["auth-method"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAuthMethod(val)
        }
        return nil
    }
    res["avatar-url"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAvatarUrl(val)
        }
        return nil
    }
    res["email"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEmail(val)
        }
        return nil
    }
    res["enterprise-support"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetEnterpriseSupport(val)
        }
        return nil
    }
    res["has-git-hub-app-token"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetHasGitHubAppToken(val)
        }
        return nil
    }
    res["has-linked-hcp"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetHasLinkedHcp(val)
        }
        return nil
    }
    res["is-admin"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsAdmin(val)
        }
        return nil
    }
    res["is-confirmed"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsConfirmed(val)
        }
        return nil
    }
    res["is-service-account"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsServiceAccount(val)
        }
        return nil
    }
    res["is-site-admin"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsSiteAdmin(val)
        }
        return nil
    }
    res["is-sso-login"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsSsoLogin(val)
        }
        return nil
    }
    res["is-sudo"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsSudo(val)
        }
        return nil
    }
    res["is-unified"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetIsUnified(val)
        }
        return nil
    }
    res["password"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetPassword(val)
        }
        return nil
    }
    res["permissions"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateAccount_attributes_permissionsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetPermissions(val.(Account_attributes_permissionsable))
        }
        return nil
    }
    res["two-factor"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateAccount_attributes_twoFactorFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTwoFactor(val.(Account_attributes_twoFactorable))
        }
        return nil
    }
    res["unconfirmed-email"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUnconfirmedEmail(val)
        }
        return nil
    }
    res["username"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetUsername(val)
        }
        return nil
    }
    res["v2-only"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetBoolValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetV2Only(val)
        }
        return nil
    }
    return res
}
// GetHasGitHubAppToken gets the has-git-hub-app-token property value. The hasGitHubAppToken property
// returns a *bool when successful
func (m *Account_attributes) GetHasGitHubAppToken()(*bool) {
    return m.hasGitHubAppToken
}
// GetHasLinkedHcp gets the has-linked-hcp property value. The hasLinkedHcp property
// returns a *bool when successful
func (m *Account_attributes) GetHasLinkedHcp()(*bool) {
    return m.hasLinkedHcp
}
// GetIsAdmin gets the is-admin property value. The isAdmin property
// returns a *bool when successful
func (m *Account_attributes) GetIsAdmin()(*bool) {
    return m.isAdmin
}
// GetIsConfirmed gets the is-confirmed property value. The isConfirmed property
// returns a *bool when successful
func (m *Account_attributes) GetIsConfirmed()(*bool) {
    return m.isConfirmed
}
// GetIsServiceAccount gets the is-service-account property value. The isServiceAccount property
// returns a *bool when successful
func (m *Account_attributes) GetIsServiceAccount()(*bool) {
    return m.isServiceAccount
}
// GetIsSiteAdmin gets the is-site-admin property value. Deprecated. Use is-admin.
// returns a *bool when successful
func (m *Account_attributes) GetIsSiteAdmin()(*bool) {
    return m.isSiteAdmin
}
// GetIsSsoLogin gets the is-sso-login property value. The isSsoLogin property
// returns a *bool when successful
func (m *Account_attributes) GetIsSsoLogin()(*bool) {
    return m.isSsoLogin
}
// GetIsSudo gets the is-sudo property value. The isSudo property
// returns a *bool when successful
func (m *Account_attributes) GetIsSudo()(*bool) {
    return m.isSudo
}
// GetIsUnified gets the is-unified property value. The isUnified property
// returns a *bool when successful
func (m *Account_attributes) GetIsUnified()(*bool) {
    return m.isUnified
}
// GetPassword gets the password property value. The password property
// returns a *string when successful
func (m *Account_attributes) GetPassword()(*string) {
    return m.password
}
// GetPermissions gets the permissions property value. The permissions property
// returns a Account_attributes_permissionsable when successful
func (m *Account_attributes) GetPermissions()(Account_attributes_permissionsable) {
    return m.permissions
}
// GetTwoFactor gets the two-factor property value. The twoFactor property
// returns a Account_attributes_twoFactorable when successful
func (m *Account_attributes) GetTwoFactor()(Account_attributes_twoFactorable) {
    return m.twoFactor
}
// GetUnconfirmedEmail gets the unconfirmed-email property value. The unconfirmedEmail property
// returns a *string when successful
func (m *Account_attributes) GetUnconfirmedEmail()(*string) {
    return m.unconfirmedEmail
}
// GetUsername gets the username property value. The username property
// returns a *string when successful
func (m *Account_attributes) GetUsername()(*string) {
    return m.username
}
// GetV2Only gets the v2-only property value. The v2Only property
// returns a *bool when successful
func (m *Account_attributes) GetV2Only()(*bool) {
    return m.v2Only
}
// Serialize serializes information the current object
func (m *Account_attributes) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteStringValue("auth-method", m.GetAuthMethod())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("avatar-url", m.GetAvatarUrl())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("email", m.GetEmail())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("enterprise-support", m.GetEnterpriseSupport())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("has-git-hub-app-token", m.GetHasGitHubAppToken())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("has-linked-hcp", m.GetHasLinkedHcp())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-admin", m.GetIsAdmin())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-confirmed", m.GetIsConfirmed())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-service-account", m.GetIsServiceAccount())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-site-admin", m.GetIsSiteAdmin())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-sso-login", m.GetIsSsoLogin())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-sudo", m.GetIsSudo())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("is-unified", m.GetIsUnified())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("password", m.GetPassword())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("permissions", m.GetPermissions())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("two-factor", m.GetTwoFactor())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("unconfirmed-email", m.GetUnconfirmedEmail())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteStringValue("username", m.GetUsername())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteBoolValue("v2-only", m.GetV2Only())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *Account_attributes) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetAuthMethod sets the auth-method property value. The authMethod property
func (m *Account_attributes) SetAuthMethod(value *string)() {
    m.authMethod = value
}
// SetAvatarUrl sets the avatar-url property value. The avatarUrl property
func (m *Account_attributes) SetAvatarUrl(value *string)() {
    m.avatarUrl = value
}
// SetEmail sets the email property value. The email property
func (m *Account_attributes) SetEmail(value *string)() {
    m.email = value
}
// SetEnterpriseSupport sets the enterprise-support property value. The enterpriseSupport property
func (m *Account_attributes) SetEnterpriseSupport(value *bool)() {
    m.enterpriseSupport = value
}
// SetHasGitHubAppToken sets the has-git-hub-app-token property value. The hasGitHubAppToken property
func (m *Account_attributes) SetHasGitHubAppToken(value *bool)() {
    m.hasGitHubAppToken = value
}
// SetHasLinkedHcp sets the has-linked-hcp property value. The hasLinkedHcp property
func (m *Account_attributes) SetHasLinkedHcp(value *bool)() {
    m.hasLinkedHcp = value
}
// SetIsAdmin sets the is-admin property value. The isAdmin property
func (m *Account_attributes) SetIsAdmin(value *bool)() {
    m.isAdmin = value
}
// SetIsConfirmed sets the is-confirmed property value. The isConfirmed property
func (m *Account_attributes) SetIsConfirmed(value *bool)() {
    m.isConfirmed = value
}
// SetIsServiceAccount sets the is-service-account property value. The isServiceAccount property
func (m *Account_attributes) SetIsServiceAccount(value *bool)() {
    m.isServiceAccount = value
}
// SetIsSiteAdmin sets the is-site-admin property value. Deprecated. Use is-admin.
func (m *Account_attributes) SetIsSiteAdmin(value *bool)() {
    m.isSiteAdmin = value
}
// SetIsSsoLogin sets the is-sso-login property value. The isSsoLogin property
func (m *Account_attributes) SetIsSsoLogin(value *bool)() {
    m.isSsoLogin = value
}
// SetIsSudo sets the is-sudo property value. The isSudo property
func (m *Account_attributes) SetIsSudo(value *bool)() {
    m.isSudo = value
}
// SetIsUnified sets the is-unified property value. The isUnified property
func (m *Account_attributes) SetIsUnified(value *bool)() {
    m.isUnified = value
}
// SetPassword sets the password property value. The password property
func (m *Account_attributes) SetPassword(value *string)() {
    m.password = value
}
// SetPermissions sets the permissions property value. The permissions property
func (m *Account_attributes) SetPermissions(value Account_attributes_permissionsable)() {
    m.permissions = value
}
// SetTwoFactor sets the two-factor property value. The twoFactor property
func (m *Account_attributes) SetTwoFactor(value Account_attributes_twoFactorable)() {
    m.twoFactor = value
}
// SetUnconfirmedEmail sets the unconfirmed-email property value. The unconfirmedEmail property
func (m *Account_attributes) SetUnconfirmedEmail(value *string)() {
    m.unconfirmedEmail = value
}
// SetUsername sets the username property value. The username property
func (m *Account_attributes) SetUsername(value *string)() {
    m.username = value
}
// SetV2Only sets the v2-only property value. The v2Only property
func (m *Account_attributes) SetV2Only(value *bool)() {
    m.v2Only = value
}
type Account_attributesable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAuthMethod()(*string)
    GetAvatarUrl()(*string)
    GetEmail()(*string)
    GetEnterpriseSupport()(*bool)
    GetHasGitHubAppToken()(*bool)
    GetHasLinkedHcp()(*bool)
    GetIsAdmin()(*bool)
    GetIsConfirmed()(*bool)
    GetIsServiceAccount()(*bool)
    GetIsSiteAdmin()(*bool)
    GetIsSsoLogin()(*bool)
    GetIsSudo()(*bool)
    GetIsUnified()(*bool)
    GetPassword()(*string)
    GetPermissions()(Account_attributes_permissionsable)
    GetTwoFactor()(Account_attributes_twoFactorable)
    GetUnconfirmedEmail()(*string)
    GetUsername()(*string)
    GetV2Only()(*bool)
    SetAuthMethod(value *string)()
    SetAvatarUrl(value *string)()
    SetEmail(value *string)()
    SetEnterpriseSupport(value *bool)()
    SetHasGitHubAppToken(value *bool)()
    SetHasLinkedHcp(value *bool)()
    SetIsAdmin(value *bool)()
    SetIsConfirmed(value *bool)()
    SetIsServiceAccount(value *bool)()
    SetIsSiteAdmin(value *bool)()
    SetIsSsoLogin(value *bool)()
    SetIsSudo(value *bool)()
    SetIsUnified(value *bool)()
    SetPassword(value *string)()
    SetPermissions(value Account_attributes_permissionsable)()
    SetTwoFactor(value Account_attributes_twoFactorable)()
    SetUnconfirmedEmail(value *string)()
    SetUsername(value *string)()
    SetV2Only(value *bool)()
}
