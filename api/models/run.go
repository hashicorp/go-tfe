// Code generated by Microsoft Kiota - DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package models

import (
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91 "github.com/microsoft/kiota-abstractions-go/serialization"
)

type Run struct {
    // Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
    additionalData map[string]any
    // The attributes property
    attributes Run_attributesable
    // The id property
    id *string
    // The relationships property
    relationships Run_relationshipsable
    // The type property
    typeEscaped *Run_type
}
// NewRun instantiates a new Run and sets the default values.
func NewRun()(*Run) {
    m := &Run{
    }
    m.SetAdditionalData(make(map[string]any))
    return m
}
// CreateRunFromDiscriminatorValue creates a new instance of the appropriate class based on discriminator value
// returns a Parsable when successful
func CreateRunFromDiscriminatorValue(parseNode i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable, error) {
    return NewRun(), nil
}
// GetAdditionalData gets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
// returns a map[string]any when successful
func (m *Run) GetAdditionalData()(map[string]any) {
    return m.additionalData
}
// GetAttributes gets the attributes property value. The attributes property
// returns a Run_attributesable when successful
func (m *Run) GetAttributes()(Run_attributesable) {
    return m.attributes
}
// GetFieldDeserializers the deserialization information for the current model
// returns a map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error) when successful
func (m *Run) GetFieldDeserializers()(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error)) {
    res := make(map[string]func(i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode)(error))
    res["attributes"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateRun_attributesFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetAttributes(val.(Run_attributesable))
        }
        return nil
    }
    res["id"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        if val != nil {
            m.SetId(val)
        }
        return nil
    }
    res["relationships"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetObjectValue(CreateRun_relationshipsFromDiscriminatorValue)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetRelationships(val.(Run_relationshipsable))
        }
        return nil
    }
    res["type"] = func (n i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.ParseNode) error {
        val, err := n.GetEnumValue(ParseRun_type)
        if err != nil {
            return err
        }
        if val != nil {
            m.SetTypeEscaped(val.(*Run_type))
        }
        return nil
    }
    return res
}
// GetId gets the id property value. The id property
// returns a *string when successful
func (m *Run) GetId()(*string) {
    return m.id
}
// GetRelationships gets the relationships property value. The relationships property
// returns a Run_relationshipsable when successful
func (m *Run) GetRelationships()(Run_relationshipsable) {
    return m.relationships
}
// GetTypeEscaped gets the type property value. The type property
// returns a *Run_type when successful
func (m *Run) GetTypeEscaped()(*Run_type) {
    return m.typeEscaped
}
// Serialize serializes information the current object
func (m *Run) Serialize(writer i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.SerializationWriter)(error) {
    {
        err := writer.WriteObjectValue("attributes", m.GetAttributes())
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteObjectValue("relationships", m.GetRelationships())
        if err != nil {
            return err
        }
    }
    if m.GetTypeEscaped() != nil {
        cast := (*m.GetTypeEscaped()).String()
        err := writer.WriteStringValue("type", &cast)
        if err != nil {
            return err
        }
    }
    {
        err := writer.WriteAdditionalData(m.GetAdditionalData())
        if err != nil {
            return err
        }
    }
    return nil
}
// SetAdditionalData sets the AdditionalData property value. Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.
func (m *Run) SetAdditionalData(value map[string]any)() {
    m.additionalData = value
}
// SetAttributes sets the attributes property value. The attributes property
func (m *Run) SetAttributes(value Run_attributesable)() {
    m.attributes = value
}
// SetId sets the id property value. The id property
func (m *Run) SetId(value *string)() {
    m.id = value
}
// SetRelationships sets the relationships property value. The relationships property
func (m *Run) SetRelationships(value Run_relationshipsable)() {
    m.relationships = value
}
// SetTypeEscaped sets the type property value. The type property
func (m *Run) SetTypeEscaped(value *Run_type)() {
    m.typeEscaped = value
}
type Runable interface {
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.AdditionalDataHolder
    i878a80d2330e89d26896388a3f487eef27b0a0e6c010c493bf80be1452208f91.Parsable
    GetAttributes()(Run_attributesable)
    GetId()(*string)
    GetRelationships()(Run_relationshipsable)
    GetTypeEscaped()(*Run_type)
    SetAttributes(value Run_attributesable)()
    SetId(value *string)()
    SetRelationships(value Run_relationshipsable)()
    SetTypeEscaped(value *Run_type)()
}
